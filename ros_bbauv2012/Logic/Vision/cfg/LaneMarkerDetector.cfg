#!/usr/bin/env python2

PACKAGE = "Vision"
# The following line should not be here for Groovy and above
import roslib;roslib.load_manifest(PACKAGE)

# For Groovy and above, the following line should be
# from dynamic_reconfigure.parameter_generator_catkin import *
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("contourMinArea", int_t, 0, "Min contour area (1/1000)", 13, 0, 1000)
gen.add("hueLow",  int_t, 0, "Hue Low",   70, 0, 180)
gen.add("hueHigh", int_t, 0, "Hue High",  91, 0, 180)
gen.add("satLow",  int_t, 0, "Sat Low",    0, 0, 255)
gen.add("satHigh", int_t, 0, "Sat High", 255, 0, 255)
gen.add("valLow",  int_t, 0, "Val Low",    0, 0, 255)
gen.add("valHigh", int_t, 0, "Val High", 255, 0, 255)

gen.add("houghThreshold", int_t, 0, "Min votes for Hough transform", 80, 0, 255)
gen.add("houghMinLineLength", double_t, 0, "Min line length for Hough transform", 60, 0, 400)
gen.add("houghMaxLineGap", double_t, 0, "Max line gap for Hough transform", 10, 0, 400)

gen.add("epsilonX", double_t, 0, "Min error in X when stabilizing", 0.2, 0, 1)
gen.add("epsilonY", double_t, 0, "Min error in Y when stabilizing", 0.2, 0, 1)
gen.add("forwardK", double_t, 0, "Forward Kp", 2.0, 0, 30)
gen.add("sidemoveK", double_t, 0, "Sidemove Kp", 1.0, 0, 30)
gen.add("goalWait", double_t, 0, "Seconds to wait for action", 5, 0, 10)

gen.add("discardTimeout", double_t, 0, "Seconds before discarding previous samples", 1, 0, 100)
gen.add("minVariance", double_t, 0, "Min variance to accept", 16, 0, 100)

exit(gen.generate(PACKAGE, "LaneMarkerDetector", "LaneMarkerDetector"))

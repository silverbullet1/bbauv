#!/usr/bin/env python2

PACKAGE = "Vision"
# The following line should not be here for Groovy and above
import roslib;roslib.load_manifest(PACKAGE)

# For Groovy and above, the following line should be
# from dynamic_reconfigure.parameter_generator_catkin import *
from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("contourMinArea", int_t, 0, "Min contour area (pixels)", 600, 0, 8000)
gen.add("red_hueLow",  int_t, 0, "Red hue Low",    0, 0, 180)
gen.add("red_hueHigh", int_t, 0, "Red hue High",  20, 0, 180)
gen.add("red_satLow",  int_t, 0, "Red sat Low",   64, 0, 255)
gen.add("red_satHigh", int_t, 0, "Red sat High", 255, 0, 255)
gen.add("red_valLow",  int_t, 0, "Red val Low",    0, 0, 255)
gen.add("red_valHigh", int_t, 0, "Red val High", 255, 0, 255)

gen.add("blue_hueLow",  int_t, 0, "Blue hue Low",   96, 0, 180)
gen.add("blue_hueHigh", int_t, 0, "Blue hue High", 110, 0, 180)
gen.add("blue_satLow",  int_t, 0, "Blue sat Low",  115, 0, 255)
gen.add("blue_satHigh", int_t, 0, "Blue sat High", 255, 0, 255)
gen.add("blue_valLow",  int_t, 0, "Blue val Low",    0, 0, 255)
gen.add("blue_valHigh", int_t, 0, "Blue val High", 255, 0, 255)

gen.add("yellow_hueLow",  int_t, 0, "Yellow hue Low",   31, 0, 180)
gen.add("yellow_hueHigh", int_t, 0, "Yellow hue High",  50, 0, 180)
gen.add("yellow_satLow",  int_t, 0, "Yellow sat Low",  100, 0, 255)
gen.add("yellow_satHigh", int_t, 0, "Yellow sat High", 255, 0, 255)
gen.add("yellow_valLow",  int_t, 0, "Yellow val Low",    0, 0, 255)
gen.add("yellow_valHigh", int_t, 0, "Yellow val High", 255, 0, 255)

gen.add("green_hueLow",  int_t, 0, "Green hue Low",   58, 0, 180)
gen.add("green_hueHigh", int_t, 0, "Green hue High",  72, 0, 180)
gen.add("green_satLow",  int_t, 0, "Green sat Low",  110, 0, 255)
gen.add("green_satHigh", int_t, 0, "Green sat High", 255, 0, 255)
gen.add("green_valLow",  int_t, 0, "Green val Low",    0, 0, 255)
gen.add("green_valHigh", int_t, 0, "Green val High", 255, 0, 255)

gen.add("depthGoalWait", double_t, 0, "Seconds to wait for depth goals", 1, 0, 10)
gen.add("otherGoalWait", double_t, 0, "Seconds to wait for other motion goals", 1, 0, 10)

gen.add("farForwardK", double_t, 0, "Forward K when far away", 24, 0, 100)
gen.add("farSideK", double_t, 0, "Sidemove K when far away", 20, 0, 100)
gen.add("farDepthK", double_t, 0, "Depth K when far away", 2, 0, 100)
gen.add("farAngleK", double_t, 0, "Angular K when far away", 0.8, 0, 100)
gen.add("farEpsilonX", double_t, 0, "Allowed error for X when far", 0.08, 0, 1)
gen.add("farEpsilonY", double_t, 0, "Allowed error for Y when far", 0.08, 0, 1)
gen.add("farEpsilonAngle", double_t, 0, "Allowed error for angle when far", 4, 0, 90)
gen.add("farMinSize", double_t, 0, "Min size when far", 0.033, 0, 1)
gen.add("farMaxSize", double_t, 0, "Max size when far", 0.6, 0, 1)
gen.add("farTimeout", double_t, 0, "Seconds for far correction", 40, 0, 200)

gen.add("nearForwardK", double_t, 0, "Forward K when near", 4, 0, 100)
gen.add("nearSideK", double_t, 0, "Sidemove K when near", 10, 0, 100)
gen.add("nearDepthK", double_t, 0, "Depth K when near", 2, 0, 100)
gen.add("nearAngleK", double_t, 0, "Angular K when near", 0.8, 0, 100)
gen.add("nearEpsilonX", double_t, 0, "Allowed error for X when near", 0.1, 0, 1)
gen.add("nearEpsilonY", double_t, 0, "Allowed error for Y when near", 0.08, 0, 1)
gen.add("nearEpsilonAngle", double_t, 0, "Allowed error for angle when near", 6, 0, 90)
gen.add("nearMinSize", double_t, 0, "Min size when near", 0.2, 0, 1)
gen.add("nearMaxSize", double_t, 0, "Max size when near", 0.6, 0, 1)
gen.add("nearTimeout", double_t, 0, "Seconds for near correction", 30, 0, 200)

gen.add("holeForwardK", double_t, 0, "Forward K when going for hole", 1.4, 0, 100)
gen.add("holeSideK", double_t, 0, "Sidemove K when going for hole", 4, 0, 100)
gen.add("holeDepthK", double_t, 0, "Depth K when going for hole", 0.3, 0, 100)
gen.add("holeAngleK", double_t, 0, "Angular K when going for hole", 0.4, 0, 100)
gen.add("holeEpsilonX", double_t, 0, "Allowed error for X for hole", 0.08, 0, 1)
gen.add("holeEpsilonY", double_t, 0, "Allowed error for Y for hole", 0.08, 0, 1)
gen.add("holeEpsilonAngle", double_t, 0, "Allowed error for angle for hole", 0.4, 0, 90)
gen.add("holeMinSize", double_t, 0, "Min size for hole", 0.05, 0, 1)
gen.add("holeMaxSize", double_t, 0, "Max size for hole", 0.2, 0, 1)
gen.add("holeTimeout", double_t, 0, "Seconds to try for hole", 30, 0, 200)

gen.add("chargeWait", double_t, 0, "Seconds to charge torpedo", 1, 0, 10)
gen.add("fireWait", double_t, 0, "Seconds to wait after firing torpedo", 3, 0, 10)


exit(gen.generate(PACKAGE, "Tollbooth", "Tollbooth"))

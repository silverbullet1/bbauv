//#line 2 "/opt/ros/fuerte/stacks/dynamic_reconfigure/templates/ConfigType.h"
// *********************************************************
// 
// File autogenerated for the PID_Controller package 
// by the dynamic_reconfigure package.
// Please do not edit.
// 
// ********************************************************/

/***********************************************************
 * Software License Agreement (BSD License)
 *
 *  Copyright (c) 2008, Willow Garage, Inc.
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *   * Redistributions in binary form must reproduce the above
 *     copyright notice, this list of conditions and the following
 *     disclaimer in the documentation and/or other materials provided
 *     with the distribution.
 *   * Neither the name of the Willow Garage nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 *  POSSIBILITY OF SUCH DAMAGE.
 ***********************************************************/

// Author: Blaise Gassend


#ifndef __PID_Controller__PID_CONTROLLERCONFIG_H__
#define __PID_Controller__PID_CONTROLLERCONFIG_H__

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace PID_Controller
{
  class PID_ControllerConfigStatics;
  
  class PID_ControllerConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l, 
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      
      virtual void clamp(PID_ControllerConfig &config, const PID_ControllerConfig &max, const PID_ControllerConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const PID_ControllerConfig &config1, const PID_ControllerConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, PID_ControllerConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const PID_ControllerConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, PID_ControllerConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const PID_ControllerConfig &config) const = 0;
      virtual void getValue(const PID_ControllerConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;
    
    template <class T>
    class ParamDescription : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string name, std::string type, uint32_t level, 
          std::string description, std::string edit_method, T PID_ControllerConfig::* f) :
        AbstractParamDescription(name, type, level, description, edit_method),
        field(f)
      {}

      T (PID_ControllerConfig::* field);

      virtual void clamp(PID_ControllerConfig &config, const PID_ControllerConfig &max, const PID_ControllerConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;
        
        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const PID_ControllerConfig &config1, const PID_ControllerConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, PID_ControllerConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const PID_ControllerConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, PID_ControllerConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const PID_ControllerConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const PID_ControllerConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, PID_ControllerConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); i++)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    template<class T, class PT>
    class GroupDescription : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string name, std::string type, int parent, int id, bool s, T PT::* f) : AbstractGroupDescription(name, type, parent, id, s), field(f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;
        
        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); i++) 
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); i++)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }
      
      virtual void updateParams(boost::any &cfg, PID_ControllerConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); i++) 
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); i++)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<PID_ControllerConfig::AbstractGroupDescriptionConstPtr> groups;
    };
    
class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(PID_ControllerConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = params.begin(); i != params.end(); i++)
      {
        boost::any val;
        (*i)->getValue(config, val);

        if("navigation"==(*i)->name){navigation = boost::any_cast<bool>(val);}
        if("depth_PID"==(*i)->name){depth_PID = boost::any_cast<bool>(val);}
        if("heading_PID"==(*i)->name){heading_PID = boost::any_cast<bool>(val);}
        if("forward_PID"==(*i)->name){forward_PID = boost::any_cast<bool>(val);}
        if("sidemove_PID"==(*i)->name){sidemove_PID = boost::any_cast<bool>(val);}
        if("pitch_PID"==(*i)->name){pitch_PID = boost::any_cast<bool>(val);}
        if("teleop"==(*i)->name){teleop = boost::any_cast<bool>(val);}
        if("topside"==(*i)->name){topside = boost::any_cast<bool>(val);}
        if("depth_setpoint"==(*i)->name){depth_setpoint = boost::any_cast<double>(val);}
        if("heading_setpoint"==(*i)->name){heading_setpoint = boost::any_cast<double>(val);}
        if("forward_setpoint"==(*i)->name){forward_setpoint = boost::any_cast<double>(val);}
        if("sidemove_setpoint"==(*i)->name){sidemove_setpoint = boost::any_cast<double>(val);}
        if("pitch_setpoint"==(*i)->name){pitch_setpoint = boost::any_cast<double>(val);}
        if("depth_offset"==(*i)->name){depth_offset = boost::any_cast<double>(val);}
        if("depth_Kp"==(*i)->name){depth_Kp = boost::any_cast<double>(val);}
        if("depth_Ti"==(*i)->name){depth_Ti = boost::any_cast<double>(val);}
        if("depth_Td"==(*i)->name){depth_Td = boost::any_cast<double>(val);}
        if("depth_min"==(*i)->name){depth_min = boost::any_cast<int>(val);}
        if("depth_max"==(*i)->name){depth_max = boost::any_cast<int>(val);}
        if("pitch_Kp"==(*i)->name){pitch_Kp = boost::any_cast<double>(val);}
        if("pitch_Ti"==(*i)->name){pitch_Ti = boost::any_cast<double>(val);}
        if("pitch_Td"==(*i)->name){pitch_Td = boost::any_cast<double>(val);}
        if("pitch_min"==(*i)->name){pitch_min = boost::any_cast<int>(val);}
        if("pitch_max"==(*i)->name){pitch_max = boost::any_cast<int>(val);}
        if("heading_Kp"==(*i)->name){heading_Kp = boost::any_cast<double>(val);}
        if("heading_Ti"==(*i)->name){heading_Ti = boost::any_cast<double>(val);}
        if("heading_Td"==(*i)->name){heading_Td = boost::any_cast<double>(val);}
        if("heading_min"==(*i)->name){heading_min = boost::any_cast<int>(val);}
        if("heading_max"==(*i)->name){heading_max = boost::any_cast<int>(val);}
        if("forward_Kp"==(*i)->name){forward_Kp = boost::any_cast<double>(val);}
        if("forward_Ti"==(*i)->name){forward_Ti = boost::any_cast<double>(val);}
        if("forward_Td"==(*i)->name){forward_Td = boost::any_cast<double>(val);}
        if("forward_min"==(*i)->name){forward_min = boost::any_cast<int>(val);}
        if("forward_max"==(*i)->name){forward_max = boost::any_cast<int>(val);}
        if("sidemove_Kp"==(*i)->name){sidemove_Kp = boost::any_cast<double>(val);}
        if("sidemove_Ti"==(*i)->name){sidemove_Ti = boost::any_cast<double>(val);}
        if("sidemove_Td"==(*i)->name){sidemove_Td = boost::any_cast<double>(val);}
        if("sidemove_min"==(*i)->name){sidemove_min = boost::any_cast<int>(val);}
        if("sidemove_max"==(*i)->name){sidemove_max = boost::any_cast<int>(val);}
      }
    }

    bool navigation;
bool depth_PID;
bool heading_PID;
bool forward_PID;
bool sidemove_PID;
bool pitch_PID;
bool teleop;
bool topside;
double depth_setpoint;
double heading_setpoint;
double forward_setpoint;
double sidemove_setpoint;
double pitch_setpoint;
double depth_offset;
double depth_Kp;
double depth_Ti;
double depth_Td;
int depth_min;
int depth_max;
double pitch_Kp;
double pitch_Ti;
double pitch_Td;
int pitch_min;
int pitch_max;
double heading_Kp;
double heading_Ti;
double heading_Td;
int heading_min;
int heading_max;
double forward_Kp;
double forward_Ti;
double forward_Td;
int forward_min;
int forward_max;
double sidemove_Kp;
double sidemove_Ti;
double sidemove_Td;
int sidemove_min;
int sidemove_max;

    bool state;
    std::string name;

    
}groups;



//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      bool navigation;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      bool depth_PID;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      bool heading_PID;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      bool forward_PID;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      bool sidemove_PID;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      bool pitch_PID;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      bool teleop;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      bool topside;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double depth_setpoint;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double heading_setpoint;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double forward_setpoint;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double sidemove_setpoint;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double pitch_setpoint;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double depth_offset;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double depth_Kp;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double depth_Ti;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double depth_Td;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int depth_min;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int depth_max;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double pitch_Kp;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double pitch_Ti;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double pitch_Td;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int pitch_min;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int pitch_max;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double heading_Kp;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double heading_Ti;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double heading_Td;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int heading_min;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int heading_max;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double forward_Kp;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double forward_Ti;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double forward_Td;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int forward_min;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int forward_max;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double sidemove_Kp;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double sidemove_Ti;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      double sidemove_Td;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int sidemove_min;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      int sidemove_max;
//#line 255 "/opt/ros/fuerte/stacks/dynamic_reconfigure/templates/ConfigType.h"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("PID_ControllerConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }
    
    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }
    
    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const PID_ControllerConfig &__max__ = __getMax__();
      const PID_ControllerConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const PID_ControllerConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); i++)
        (*i)->calcLevel(level, config, *this);
      return level;
    }
    
    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const PID_ControllerConfig &__getDefault__();
    static const PID_ControllerConfig &__getMax__();
    static const PID_ControllerConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();
    
  private:
    static const PID_ControllerConfigStatics *__get_statics__();
  };
  
  template <> // Max and min are ignored for strings.
  inline void PID_ControllerConfig::ParamDescription<std::string>::clamp(PID_ControllerConfig &config, const PID_ControllerConfig &max, const PID_ControllerConfig &min) const
  {
    return;
  }

  class PID_ControllerConfigStatics
  {
    friend class PID_ControllerConfig;
    
    PID_ControllerConfigStatics()
    {
PID_ControllerConfig::GroupDescription<PID_ControllerConfig::DEFAULT, PID_ControllerConfig> Default("Default", "", 0, 0, true, &PID_ControllerConfig::groups);
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.navigation = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.navigation = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.navigation = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("navigation", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::navigation)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("navigation", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::navigation)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.depth_PID = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.depth_PID = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.depth_PID = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("depth_PID", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::depth_PID)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("depth_PID", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::depth_PID)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.heading_PID = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.heading_PID = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.heading_PID = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("heading_PID", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::heading_PID)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("heading_PID", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::heading_PID)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.forward_PID = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.forward_PID = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.forward_PID = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("forward_PID", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::forward_PID)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("forward_PID", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::forward_PID)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.sidemove_PID = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.sidemove_PID = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.sidemove_PID = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("sidemove_PID", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::sidemove_PID)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("sidemove_PID", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::sidemove_PID)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.pitch_PID = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.pitch_PID = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.pitch_PID = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("pitch_PID", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::pitch_PID)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("pitch_PID", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::pitch_PID)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.teleop = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.teleop = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.teleop = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("teleop", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::teleop)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("teleop", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::teleop)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.topside = 0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.topside = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.topside = 1;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("topside", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::topside)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<bool>("topside", "bool", 0, "Manual-0 or Auto-1", "", &PID_ControllerConfig::topside)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.depth_setpoint = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.depth_setpoint = 5.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.depth_setpoint = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("depth_setpoint", "double", 0, "Setpoint for depth controller", "", &PID_ControllerConfig::depth_setpoint)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("depth_setpoint", "double", 0, "Setpoint for depth controller", "", &PID_ControllerConfig::depth_setpoint)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.heading_setpoint = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.heading_setpoint = 360.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.heading_setpoint = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("heading_setpoint", "double", 0, "Setpoint for heading controller", "", &PID_ControllerConfig::heading_setpoint)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("heading_setpoint", "double", 0, "Setpoint for heading controller", "", &PID_ControllerConfig::heading_setpoint)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.forward_setpoint = -1000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.forward_setpoint = 1000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.forward_setpoint = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("forward_setpoint", "double", 0, "Setpoint for forward controller", "", &PID_ControllerConfig::forward_setpoint)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("forward_setpoint", "double", 0, "Setpoint for forward controller", "", &PID_ControllerConfig::forward_setpoint)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.sidemove_setpoint = -1000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.sidemove_setpoint = 1000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.sidemove_setpoint = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("sidemove_setpoint", "double", 0, "Setpoint for sidemove controller", "", &PID_ControllerConfig::sidemove_setpoint)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("sidemove_setpoint", "double", 0, "Setpoint for sidemove controller", "", &PID_ControllerConfig::sidemove_setpoint)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.pitch_setpoint = 150.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.pitch_setpoint = 250.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.pitch_setpoint = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("pitch_setpoint", "double", 0, "Setpoint for pitch controller", "", &PID_ControllerConfig::pitch_setpoint)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("pitch_setpoint", "double", 0, "Setpoint for pitch controller", "", &PID_ControllerConfig::pitch_setpoint)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.depth_offset = -1.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.depth_offset = 1500.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.depth_offset = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("depth_offset", "double", 0, "Place vehicle at sea level first and record offset value", "", &PID_ControllerConfig::depth_offset)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("depth_offset", "double", 0, "Place vehicle at sea level first and record offset value", "", &PID_ControllerConfig::depth_offset)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.depth_Kp = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.depth_Kp = 50000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.depth_Kp = 12000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("depth_Kp", "double", 0, "P const for depth controller", "", &PID_ControllerConfig::depth_Kp)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("depth_Kp", "double", 0, "P const for depth controller", "", &PID_ControllerConfig::depth_Kp)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.depth_Ti = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.depth_Ti = 50000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.depth_Ti = 8500.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("depth_Ti", "double", 0, "I const for depth controller", "", &PID_ControllerConfig::depth_Ti)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("depth_Ti", "double", 0, "I const for depth controller", "", &PID_ControllerConfig::depth_Ti)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.depth_Td = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.depth_Td = 50000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.depth_Td = 1000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("depth_Td", "double", 0, "D const for depth controller", "", &PID_ControllerConfig::depth_Td)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("depth_Td", "double", 0, "D const for depth controller", "", &PID_ControllerConfig::depth_Td)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.depth_min = -3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.depth_min = 3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.depth_min = -2400;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("depth_min", "int", 0, "Actuator Min for Depth controller", "", &PID_ControllerConfig::depth_min)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("depth_min", "int", 0, "Actuator Min for Depth controller", "", &PID_ControllerConfig::depth_min)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.depth_max = -3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.depth_max = 3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.depth_max = 2400;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("depth_max", "int", 0, "Actuator Max for Depth controller", "", &PID_ControllerConfig::depth_max)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("depth_max", "int", 0, "Actuator Max for Depth controller", "", &PID_ControllerConfig::depth_max)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.pitch_Kp = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.pitch_Kp = 50000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.pitch_Kp = 70.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("pitch_Kp", "double", 0, "P const for pitch controller", "", &PID_ControllerConfig::pitch_Kp)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("pitch_Kp", "double", 0, "P const for pitch controller", "", &PID_ControllerConfig::pitch_Kp)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.pitch_Ti = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.pitch_Ti = 50000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.pitch_Ti = 12000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("pitch_Ti", "double", 0, "I const for pitch controller", "", &PID_ControllerConfig::pitch_Ti)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("pitch_Ti", "double", 0, "I const for pitch controller", "", &PID_ControllerConfig::pitch_Ti)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.pitch_Td = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.pitch_Td = 50000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.pitch_Td = 130.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("pitch_Td", "double", 0, "D const for pitch controller", "", &PID_ControllerConfig::pitch_Td)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("pitch_Td", "double", 0, "D const for pitch controller", "", &PID_ControllerConfig::pitch_Td)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.pitch_min = -3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.pitch_min = 3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.pitch_min = -800;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("pitch_min", "int", 0, "Actuator Min for Pitch controller", "", &PID_ControllerConfig::pitch_min)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("pitch_min", "int", 0, "Actuator Min for Pitch controller", "", &PID_ControllerConfig::pitch_min)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.pitch_max = -3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.pitch_max = 3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.pitch_max = 800;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("pitch_max", "int", 0, "Actuator Max for Pitch controller", "", &PID_ControllerConfig::pitch_max)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("pitch_max", "int", 0, "Actuator Max for Pitch controller", "", &PID_ControllerConfig::pitch_max)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.heading_Kp = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.heading_Kp = 10000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.heading_Kp = 15.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("heading_Kp", "double", 0, "P const for heading controller", "", &PID_ControllerConfig::heading_Kp)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("heading_Kp", "double", 0, "P const for heading controller", "", &PID_ControllerConfig::heading_Kp)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.heading_Ti = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.heading_Ti = 100000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.heading_Ti = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("heading_Ti", "double", 0, "I const for heading controller", "", &PID_ControllerConfig::heading_Ti)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("heading_Ti", "double", 0, "I const for heading controller", "", &PID_ControllerConfig::heading_Ti)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.heading_Td = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.heading_Td = 10000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.heading_Td = 30.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("heading_Td", "double", 0, "D const for heading controller", "", &PID_ControllerConfig::heading_Td)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("heading_Td", "double", 0, "D const for heading controller", "", &PID_ControllerConfig::heading_Td)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.heading_min = -3260;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.heading_min = 3260;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.heading_min = -817;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("heading_min", "int", 0, "Actuator Min for Heading controller", "", &PID_ControllerConfig::heading_min)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("heading_min", "int", 0, "Actuator Min for Heading controller", "", &PID_ControllerConfig::heading_min)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.heading_max = -3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.heading_max = 3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.heading_max = 817;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("heading_max", "int", 0, "Actuator Max for Heading controller", "", &PID_ControllerConfig::heading_max)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("heading_max", "int", 0, "Actuator Max for Heading controller", "", &PID_ControllerConfig::heading_max)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.forward_Kp = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.forward_Kp = 100000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.forward_Kp = 1200.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("forward_Kp", "double", 0, "P const for forward controller", "", &PID_ControllerConfig::forward_Kp)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("forward_Kp", "double", 0, "P const for forward controller", "", &PID_ControllerConfig::forward_Kp)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.forward_Ti = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.forward_Ti = 10000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.forward_Ti = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("forward_Ti", "double", 0, "I const for forward controller", "", &PID_ControllerConfig::forward_Ti)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("forward_Ti", "double", 0, "I const for forward controller", "", &PID_ControllerConfig::forward_Ti)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.forward_Td = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.forward_Td = 10000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.forward_Td = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("forward_Td", "double", 0, "D const for forward controller", "", &PID_ControllerConfig::forward_Td)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("forward_Td", "double", 0, "D const for forward controller", "", &PID_ControllerConfig::forward_Td)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.forward_min = -3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.forward_min = 3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.forward_min = -1634;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("forward_min", "int", 0, "Actuator Min for Forward controller", "", &PID_ControllerConfig::forward_min)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("forward_min", "int", 0, "Actuator Min for Forward controller", "", &PID_ControllerConfig::forward_min)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.forward_max = -3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.forward_max = 3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.forward_max = 1634;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("forward_max", "int", 0, "Actuator Max for Forward controller", "", &PID_ControllerConfig::forward_max)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("forward_max", "int", 0, "Actuator Max for Forward controller", "", &PID_ControllerConfig::forward_max)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.sidemove_Kp = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.sidemove_Kp = 100000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.sidemove_Kp = 8000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("sidemove_Kp", "double", 0, "P const for sidemove controller", "", &PID_ControllerConfig::sidemove_Kp)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("sidemove_Kp", "double", 0, "P const for sidemove controller", "", &PID_ControllerConfig::sidemove_Kp)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.sidemove_Ti = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.sidemove_Ti = 10000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.sidemove_Ti = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("sidemove_Ti", "double", 0, "I const for sidemove controller", "", &PID_ControllerConfig::sidemove_Ti)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("sidemove_Ti", "double", 0, "I const for sidemove controller", "", &PID_ControllerConfig::sidemove_Ti)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.sidemove_Td = 0.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.sidemove_Td = 10000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.sidemove_Td = 1000.0;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("sidemove_Td", "double", 0, "D const for sidemove controller", "", &PID_ControllerConfig::sidemove_Td)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<double>("sidemove_Td", "double", 0, "D const for sidemove controller", "", &PID_ControllerConfig::sidemove_Td)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.sidemove_min = -3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.sidemove_min = 3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.sidemove_min = -817;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("sidemove_min", "int", 0, "Actuator Min for Sway controller", "", &PID_ControllerConfig::sidemove_min)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("sidemove_min", "int", 0, "Actuator Min for Sway controller", "", &PID_ControllerConfig::sidemove_min)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __min__.sidemove_max = -3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __max__.sidemove_max = 3268;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __default__.sidemove_max = 817;
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.abstract_parameters.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("sidemove_max", "int", 0, "Actuator Max for Sway controller", "", &PID_ControllerConfig::sidemove_max)));
//#line 259 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __param_descriptions__.push_back(PID_ControllerConfig::AbstractParamDescriptionConstPtr(new PID_ControllerConfig::ParamDescription<int>("sidemove_max", "int", 0, "Actuator Max for Sway controller", "", &PID_ControllerConfig::sidemove_max)));
//#line 233 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      Default.convertParams();
//#line 233 "/opt/ros/fuerte/stacks/dynamic_reconfigure/src/dynamic_reconfigure/parameter_generator.py"
      __group_descriptions__.push_back(PID_ControllerConfig::AbstractGroupDescriptionConstPtr(new PID_ControllerConfig::GroupDescription<PID_ControllerConfig::DEFAULT, PID_ControllerConfig>(Default)));
//#line 390 "/opt/ros/fuerte/stacks/dynamic_reconfigure/templates/ConfigType.h"
    
      for (std::vector<PID_ControllerConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__); 
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__); 
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__); 
    }
    std::vector<PID_ControllerConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<PID_ControllerConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    PID_ControllerConfig __max__;
    PID_ControllerConfig __min__;
    PID_ControllerConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const PID_ControllerConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static PID_ControllerConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &PID_ControllerConfig::__getDescriptionMessage__() 
  {
    return __get_statics__()->__description_message__;
  }

  inline const PID_ControllerConfig &PID_ControllerConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }
  
  inline const PID_ControllerConfig &PID_ControllerConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }
  
  inline const PID_ControllerConfig &PID_ControllerConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }
  
  inline const std::vector<PID_ControllerConfig::AbstractParamDescriptionConstPtr> &PID_ControllerConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<PID_ControllerConfig::AbstractGroupDescriptionConstPtr> &PID_ControllerConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const PID_ControllerConfigStatics *PID_ControllerConfig::__get_statics__()
  {
    const static PID_ControllerConfigStatics *statics;
  
    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = PID_ControllerConfigStatics::get_instance();
    
    return statics;
  }


}

#endif // __PID_CONTROLLERRECONFIGURATOR_H__

#! /usr/bin/env python

PACKAGE='WH_DVL'
import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()
#       Name              Type      Level Description                                           Default    Min   Max
gen.add("port",           str_t,    0,    "The port the DVL is plugged into.",                  "/dev/ttyDVL")
gen.add("init_time",      int_t,    0,    "The init time to connect to DVL",                    5,         1,      10)
gen.add("ros_rate",       int_t,    0,    "running rate of ros node",                           5,         1,      20)
gen.add("z_velocity_var", double_t, 0,    "variance for the z velocity",                        0,         0,      5)
gen.add("command",        str_t,    0,    "The command to be sent to DVL.",                     "")
gen.add("pinging",        bool_t,   0,    "pinging the DVL ",                                   True)
gen.add("send_break",     bool_t,   0,    "send a software break to the DVL",                   False)
gen.add("zero_distance",  bool_t,   0,    "zero the traveled distance",                         False)
gen.add("verify_compass", bool_t,   0,    "verify the compass",                                 False)
#gen.add("calibrate",      bool_t,   0,    "start calibrating the internal compass",             False)
gen.add("print_data",     bool_t,   0,    "print data to a external terminal",                  False)
gen.add("clock_sync",     bool_t,   0,    "send TS command to sync the RTC",                    False)
#gen.add("reset_settings", bool_t,   0,    "reset to factory settings then send settings again", False)
gen.add("reconnect",      bool_t,   0,    "reconnect to the DVL",                               False)
exit(gen.generate(PACKAGE, "WH_DVL", "WH_DVL"))

#!/usr/bin/env python
PACKAGE = "vision"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Params for bucket
gen.add("loH1", int_t, 0, "Low H bound for bins", 1, 0, 255)
gen.add("hiH1", int_t, 0, "High H bound for bins", 25, 0, 255)
gen.add("loS1", int_t, 0, "Low S bound for bins", 0, 0, 255)
gen.add("hiS1", int_t, 0, "High S bound for bins", 255, 0, 255)
gen.add("loV1", int_t, 0, "Low V bound for bins", 0, 0, 255)
gen.add("hiV1", int_t, 0, "High V bound for bins", 255, 0, 255)

gen.add("loH2", int_t, 0, "Low H bound for bins", 160, 0, 255)
gen.add("hiH2", int_t, 0, "High H bound for bins", 180, 0, 255)
gen.add("loS2", int_t, 0, "Low S bound for bins", 0, 0, 255)
gen.add("hiS2", int_t, 0, "High S bound for bins", 255, 0, 255)
gen.add("loV2", int_t, 0, "Low V bound for bins", 0, 0, 255)
gen.add("hiV2", int_t, 0, "High V bound for bins", 255, 0, 255)

gen.add("alienMinArea", int_t, 0, "Minimum area for aliens", 3000, 1000, 50000)

gen.add("binMinArea", int_t, 0, "Minimum area for a bin", 4000, 1000, 50000)

gen.add("adaptiveCoeff", double_t, 0, "For black bins thresholding", 3.99, 0, 10)
gen.add("adaptiveOffset", double_t, 0, "For black bins thresholding", 0, -30, 30)

exit(gen.generate(PACKAGE, "bins", "bins"))
